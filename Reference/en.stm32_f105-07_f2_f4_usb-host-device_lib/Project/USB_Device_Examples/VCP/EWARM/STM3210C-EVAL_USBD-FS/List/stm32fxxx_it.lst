###############################################################################
#
# IAR ANSI C/C++ Compiler V7.80.4.12462/W32 for ARM       19/Nov/2018  00:47:29
# Copyright 1999-2017 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        E:\DYH\01_EmbeddedSoftware\Github\0.1_OBC\Reference\en.stm32_f105-07_f2_f4_usb-host-device_lib\Project\USB_Device_Examples\VCP\src\stm32fxxx_it.c
#    Command line =  
#        E:\DYH\01_EmbeddedSoftware\Github\0.1_OBC\Reference\en.stm32_f105-07_f2_f4_usb-host-device_lib\Project\USB_Device_Examples\VCP\src\stm32fxxx_it.c
#        -D USE_STDPERIPH_DRIVER -D STM32F10X_CL -D USE_STM3210C_EVAL -D
#        USE_USB_OTG_FS -lcN
#        E:\DYH\01_EmbeddedSoftware\Github\0.1_OBC\Reference\en.stm32_f105-07_f2_f4_usb-host-device_lib\Project\USB_Device_Examples\VCP\EWARM\STM3210C-EVAL_USBD-FS\List
#        -o
#        E:\DYH\01_EmbeddedSoftware\Github\0.1_OBC\Reference\en.stm32_f105-07_f2_f4_usb-host-device_lib\Project\USB_Device_Examples\VCP\EWARM\STM3210C-EVAL_USBD-FS\Obj
#        --debug --endian=little --cpu=Cortex-M3 -e --fpu=None --dlib_config
#        "E:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.5\arm\INC\c\DLib_Config_Full.h" -I
#        E:\DYH\01_EmbeddedSoftware\Github\0.1_OBC\Reference\en.stm32_f105-07_f2_f4_usb-host-device_lib\Project\USB_Device_Examples\VCP\EWARM\..\inc\
#        -I
#        E:\DYH\01_EmbeddedSoftware\Github\0.1_OBC\Reference\en.stm32_f105-07_f2_f4_usb-host-device_lib\Project\USB_Device_Examples\VCP\EWARM\..\..\..\..\Libraries\CMSIS\Device\ST\STM32F10x\Include\
#        -I
#        E:\DYH\01_EmbeddedSoftware\Github\0.1_OBC\Reference\en.stm32_f105-07_f2_f4_usb-host-device_lib\Project\USB_Device_Examples\VCP\EWARM\..\..\..\..\Libraries\STM32F10x_StdPeriph_Driver\inc\
#        -I
#        E:\DYH\01_EmbeddedSoftware\Github\0.1_OBC\Reference\en.stm32_f105-07_f2_f4_usb-host-device_lib\Project\USB_Device_Examples\VCP\EWARM\..\..\..\..\Libraries\STM32_USB_OTG_Driver\inc\
#        -I
#        E:\DYH\01_EmbeddedSoftware\Github\0.1_OBC\Reference\en.stm32_f105-07_f2_f4_usb-host-device_lib\Project\USB_Device_Examples\VCP\EWARM\..\..\..\..\Libraries\STM32_USB_Device_Library\Core\inc\
#        -I
#        E:\DYH\01_EmbeddedSoftware\Github\0.1_OBC\Reference\en.stm32_f105-07_f2_f4_usb-host-device_lib\Project\USB_Device_Examples\VCP\EWARM\..\..\..\..\Libraries\STM32_USB_Device_Library\Class\cdc\inc\
#        -I
#        E:\DYH\01_EmbeddedSoftware\Github\0.1_OBC\Reference\en.stm32_f105-07_f2_f4_usb-host-device_lib\Project\USB_Device_Examples\VCP\EWARM\..\..\..\..\Utilities\STM32_EVAL\
#        -I
#        E:\DYH\01_EmbeddedSoftware\Github\0.1_OBC\Reference\en.stm32_f105-07_f2_f4_usb-host-device_lib\Project\USB_Device_Examples\VCP\EWARM\..\..\..\..\Utilities\STM32_EVAL\Common\
#        -I
#        E:\DYH\01_EmbeddedSoftware\Github\0.1_OBC\Reference\en.stm32_f105-07_f2_f4_usb-host-device_lib\Project\USB_Device_Examples\VCP\EWARM\..\..\..\..\Utilities\STM32_EVAL\STM3210C_EVAL\
#        -Ohz --use_c++_inline -I "E:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.5\arm\CMSIS\Include\"
#    Locale       =  Chinese (Simplified)_China.936
#    List file    =  
#        E:\DYH\01_EmbeddedSoftware\Github\0.1_OBC\Reference\en.stm32_f105-07_f2_f4_usb-host-device_lib\Project\USB_Device_Examples\VCP\EWARM\STM3210C-EVAL_USBD-FS\List\stm32fxxx_it.lst
#    Object file  =  
#        E:\DYH\01_EmbeddedSoftware\Github\0.1_OBC\Reference\en.stm32_f105-07_f2_f4_usb-host-device_lib\Project\USB_Device_Examples\VCP\EWARM\STM3210C-EVAL_USBD-FS\Obj\stm32fxxx_it.o
#
###############################################################################

E:\DYH\01_EmbeddedSoftware\Github\0.1_OBC\Reference\en.stm32_f105-07_f2_f4_usb-host-device_lib\Project\USB_Device_Examples\VCP\src\stm32fxxx_it.c
      1          /**
      2            ******************************************************************************
      3            * @file    stm32fxxx_it.c
      4            * @author  MCD Application Team
      5            * @version V1.2.1
      6            * @date    17-March-2018
      7            * @brief   Main Interrupt Service Routines.
      8            *          This file provides all exceptions handler and peripherals interrupt
      9            *          service routine.
     10            ******************************************************************************
     11            * @attention
     12            *
     13            * <h2><center>&copy; Copyright (c) 2015 STMicroelectronics.
     14            * All rights reserved.</center></h2>
     15            *
     16            * This software component is licensed by ST under Ultimate Liberty license
     17            * SLA0044, the "License"; You may not use this file except in compliance with
     18            * the License. You may obtain a copy of the License at:
     19            *                      <http://www.st.com/SLA0044>
     20            *
     21            ******************************************************************************
     22            */
     23          
     24          /* Includes ------------------------------------------------------------------ */
     25          #include "stm32fxxx_it.h"
     26          
     27          /* Private typedef ----------------------------------------------------------- */
     28          /* Private define ------------------------------------------------------------ */
     29          /* Private macro ------------------------------------------------------------- */
     30          /* Private variables --------------------------------------------------------- */
     31          /* Private function prototypes ----------------------------------------------- */
     32          extern USB_OTG_CORE_HANDLE USB_OTG_dev;
     33          extern uint32_t USBD_OTG_ISR_Handler(USB_OTG_CORE_HANDLE * pdev);
     34          
     35          #ifdef USB_OTG_HS_DEDICATED_EP1_ENABLED
     36          extern uint32_t USBD_OTG_EP1IN_ISR_Handler(USB_OTG_CORE_HANDLE * pdev);
     37          extern uint32_t USBD_OTG_EP1OUT_ISR_Handler(USB_OTG_CORE_HANDLE * pdev);
     38          #endif
     39          
     40          /******************************************************************************/
     41          /* Cortex-M Processor Exceptions Handlers */
     42          /******************************************************************************/
     43          
     44          /**
     45            * @brief   This function handles NMI exception.
     46            * @param  None
     47            * @retval None
     48            */
     49          void NMI_Handler(void)
     50          {
     51          }
     52          
     53          /**
     54            * @brief  This function handles Hard Fault exception.
     55            * @param  None
     56            * @retval None
     57            */
     58          void HardFault_Handler(void)
     59          {
     60            /* Go to infinite loop when Hard Fault exception occurs */
     61            while (1)
     62            {
     63            }
     64          }
     65          
     66          /**
     67            * @brief  This function handles Memory Manage exception.
     68            * @param  None
     69            * @retval None
     70            */
     71          void MemManage_Handler(void)
     72          {
     73            /* Go to infinite loop when Memory Manage exception occurs */
     74            while (1)
     75            {
     76            }
     77          }
     78          
     79          /**
     80            * @brief  This function handles Bus Fault exception.
     81            * @param  None
     82            * @retval None
     83            */
     84          void BusFault_Handler(void)
     85          {
     86            /* Go to infinite loop when Bus Fault exception occurs */
     87            while (1)
     88            {
     89            }
     90          }
     91          
     92          /**
     93            * @brief  This function handles Usage Fault exception.
     94            * @param  None
     95            * @retval None
     96            */
     97          void UsageFault_Handler(void)
     98          {
     99            /* Go to infinite loop when Usage Fault exception occurs */
    100            while (1)
    101            {
    102            }
    103          }
    104          
    105          /**
    106            * @brief  This function handles SVCall exception.
    107            * @param  None
    108            * @retval None
    109            */
    110          void SVC_Handler(void)
    111          {
    112          }
    113          
    114          /**
    115            * @brief  This function handles Debug Monitor exception.
    116            * @param  None
    117            * @retval None
    118            */
    119          void DebugMon_Handler(void)
    120          {
    121          }
    122          
    123          /**
    124            * @brief  This function handles PendSVC exception.
    125            * @param  None
    126            * @retval None
    127            */
    128          void PendSV_Handler(void)
    129          {
    130          }
    131          
    132          /**
    133            * @brief  This function handles SysTick Handler.
    134            * @param  None
    135            * @retval None
    136            */
    137          void SysTick_Handler(void)
    138          {
    139            /* Information panel */
    140            LCD_SetTextColor(Green);
    141            LCD_SetTextColor(LCD_LOG_DEFAULT_COLOR);
    142          }
    143          
    144          /**
    145            * @brief  This function handles OTG_HS Handler.
    146            * @param  None
    147            * @retval None
    148            */
    149          #ifdef USE_USB_OTG_HS
    150          void OTG_HS_IRQHandler(void)
    151          #else
    152          void OTG_FS_IRQHandler(void)
    153          #endif
    154          {
    155            USBD_OTG_ISR_Handler(&USB_OTG_dev);
    156          }
    157          
    158          #ifdef USB_OTG_HS_DEDICATED_EP1_ENABLED
    159          /**
    160            * @brief  This function handles EP1_IN Handler.
    161            * @param  None
    162            * @retval None
    163            */
    164          void OTG_HS_EP1_IN_IRQHandler(void)
    165          {
    166            USBD_OTG_EP1IN_ISR_Handler(&USB_OTG_dev);
    167          }
    168          
    169          /**
    170            * @brief  This function handles EP1_OUT Handler.
    171            * @param  None
    172            * @retval None
    173            */
    174          void OTG_HS_EP1_OUT_IRQHandler(void)
    175          {
    176            USBD_OTG_EP1OUT_ISR_Handler(&USB_OTG_dev);
    177          }
    178          #endif
    179          
    180          
    181          /******************************************************************************/
    182          /* STM32Fxxx Peripherals Interrupt Handlers */
    183          /* Add here the Interrupt Handler for the used peripheral(s) (PPP), for the */
    184          /* available peripheral interrupt handler's name please refer to the startup */
    185          /* file (startup_stm32fxxx.s).  */
    186          /******************************************************************************/
    187          
    188          /**
    189            * @brief  This function handles PPP interrupt request.
    190            * @param  None
    191            * @retval None
    192            */
    193          /* void PPP_IRQHandler(void) { } */
    194          
    195          /************************ (C) COPYRIGHT STMicroelectronics *****END OF FILE****/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   BusFault_Handler
       0   DebugMon_Handler
       0   HardFault_Handler
       0   MemManage_Handler
       0   NMI_Handler
       0   OTG_FS_IRQHandler
         0   -> USBD_OTG_ISR_Handler
       0   PendSV_Handler
       0   SVC_Handler
       8   SysTick_Handler
         0   -> LCD_SetTextColor
         8   -> LCD_SetTextColor
       0   UsageFault_Handler


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable0
       2  BusFault_Handler
       2  DebugMon_Handler
       2  HardFault_Handler
       2  MemManage_Handler
       2  NMI_Handler
       6  OTG_FS_IRQHandler
       2  PendSV_Handler
       2  SVC_Handler
      22  SysTick_Handler
       2  UsageFault_Handler

 
 48 bytes in section .text
 
 48 bytes of CODE memory

Errors: none
Warnings: none
