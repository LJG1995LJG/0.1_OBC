###############################################################################
#
# IAR ANSI C/C++ Compiler V7.80.4.12462/W32 for ARM       19/Nov/2018  00:47:28
# Copyright 1999-2017 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        E:\DYH\01_EmbeddedSoftware\Github\0.1_OBC\Reference\en.stm32_f105-07_f2_f4_usb-host-device_lib\Project\USB_Device_Examples\VCP\src\app.c
#    Command line =  
#        E:\DYH\01_EmbeddedSoftware\Github\0.1_OBC\Reference\en.stm32_f105-07_f2_f4_usb-host-device_lib\Project\USB_Device_Examples\VCP\src\app.c
#        -D USE_STDPERIPH_DRIVER -D STM32F10X_CL -D USE_STM3210C_EVAL -D
#        USE_USB_OTG_FS -lcN
#        E:\DYH\01_EmbeddedSoftware\Github\0.1_OBC\Reference\en.stm32_f105-07_f2_f4_usb-host-device_lib\Project\USB_Device_Examples\VCP\EWARM\STM3210C-EVAL_USBD-FS\List
#        -o
#        E:\DYH\01_EmbeddedSoftware\Github\0.1_OBC\Reference\en.stm32_f105-07_f2_f4_usb-host-device_lib\Project\USB_Device_Examples\VCP\EWARM\STM3210C-EVAL_USBD-FS\Obj
#        --debug --endian=little --cpu=Cortex-M3 -e --fpu=None --dlib_config
#        "E:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.5\arm\INC\c\DLib_Config_Full.h" -I
#        E:\DYH\01_EmbeddedSoftware\Github\0.1_OBC\Reference\en.stm32_f105-07_f2_f4_usb-host-device_lib\Project\USB_Device_Examples\VCP\EWARM\..\inc\
#        -I
#        E:\DYH\01_EmbeddedSoftware\Github\0.1_OBC\Reference\en.stm32_f105-07_f2_f4_usb-host-device_lib\Project\USB_Device_Examples\VCP\EWARM\..\..\..\..\Libraries\CMSIS\Device\ST\STM32F10x\Include\
#        -I
#        E:\DYH\01_EmbeddedSoftware\Github\0.1_OBC\Reference\en.stm32_f105-07_f2_f4_usb-host-device_lib\Project\USB_Device_Examples\VCP\EWARM\..\..\..\..\Libraries\STM32F10x_StdPeriph_Driver\inc\
#        -I
#        E:\DYH\01_EmbeddedSoftware\Github\0.1_OBC\Reference\en.stm32_f105-07_f2_f4_usb-host-device_lib\Project\USB_Device_Examples\VCP\EWARM\..\..\..\..\Libraries\STM32_USB_OTG_Driver\inc\
#        -I
#        E:\DYH\01_EmbeddedSoftware\Github\0.1_OBC\Reference\en.stm32_f105-07_f2_f4_usb-host-device_lib\Project\USB_Device_Examples\VCP\EWARM\..\..\..\..\Libraries\STM32_USB_Device_Library\Core\inc\
#        -I
#        E:\DYH\01_EmbeddedSoftware\Github\0.1_OBC\Reference\en.stm32_f105-07_f2_f4_usb-host-device_lib\Project\USB_Device_Examples\VCP\EWARM\..\..\..\..\Libraries\STM32_USB_Device_Library\Class\cdc\inc\
#        -I
#        E:\DYH\01_EmbeddedSoftware\Github\0.1_OBC\Reference\en.stm32_f105-07_f2_f4_usb-host-device_lib\Project\USB_Device_Examples\VCP\EWARM\..\..\..\..\Utilities\STM32_EVAL\
#        -I
#        E:\DYH\01_EmbeddedSoftware\Github\0.1_OBC\Reference\en.stm32_f105-07_f2_f4_usb-host-device_lib\Project\USB_Device_Examples\VCP\EWARM\..\..\..\..\Utilities\STM32_EVAL\Common\
#        -I
#        E:\DYH\01_EmbeddedSoftware\Github\0.1_OBC\Reference\en.stm32_f105-07_f2_f4_usb-host-device_lib\Project\USB_Device_Examples\VCP\EWARM\..\..\..\..\Utilities\STM32_EVAL\STM3210C_EVAL\
#        -Ohz --use_c++_inline -I "E:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.5\arm\CMSIS\Include\"
#    Locale       =  Chinese (Simplified)_China.936
#    List file    =  
#        E:\DYH\01_EmbeddedSoftware\Github\0.1_OBC\Reference\en.stm32_f105-07_f2_f4_usb-host-device_lib\Project\USB_Device_Examples\VCP\EWARM\STM3210C-EVAL_USBD-FS\List\app.lst
#    Object file  =  
#        E:\DYH\01_EmbeddedSoftware\Github\0.1_OBC\Reference\en.stm32_f105-07_f2_f4_usb-host-device_lib\Project\USB_Device_Examples\VCP\EWARM\STM3210C-EVAL_USBD-FS\Obj\app.o
#
###############################################################################

E:\DYH\01_EmbeddedSoftware\Github\0.1_OBC\Reference\en.stm32_f105-07_f2_f4_usb-host-device_lib\Project\USB_Device_Examples\VCP\src\app.c
      1          /**
      2            ******************************************************************************
      3            * @file    app.c
      4            * @author  MCD Application Team
      5            * @version V1.2.1
      6            * @date    17-March-2018
      7            * @brief   This file provides all the Application firmware functions.
      8            ******************************************************************************
      9            * @attention
     10            *
     11            * <h2><center>&copy; Copyright (c) 2015 STMicroelectronics.
     12            * All rights reserved.</center></h2>
     13            *
     14            * This software component is licensed by ST under Ultimate Liberty license
     15            * SLA0044, the "License"; You may not use this file except in compliance with
     16            * the License. You may obtain a copy of the License at:
     17            *                      <http://www.st.com/SLA0044>
     18            *
     19            ******************************************************************************
     20            */
     21          
     22          /* Includes ------------------------------------------------------------------ */
     23          
     24          #include "usbd_cdc_core.h"
     25          #include "usbd_usr.h"
     26          #include "usb_conf.h"
     27          #include "usbd_desc.h"
     28          
     29          /** @addtogroup STM32_USB_OTG_DEVICE_LIBRARY
     30            * @{
     31            */
     32          
     33          
     34          /** @defgroup APP_VCP 
     35            * @brief Mass storage application module
     36            * @{
     37            */
     38          
     39          /** @defgroup APP_VCP_Private_TypesDefinitions
     40            * @{
     41            */
     42          /**
     43            * @}
     44            */
     45          
     46          
     47          /** @defgroup APP_VCP_Private_Defines
     48            * @{
     49            */
     50          
     51          /**
     52            * @}
     53            */
     54          
     55          
     56          /** @defgroup APP_VCP_Private_Macros
     57            * @{
     58            */
     59          /**
     60            * @}
     61            */
     62          
     63          
     64          /** @defgroup APP_VCP_Private_Variables
     65            * @{
     66            */
     67          
     68          #ifdef USB_OTG_HS_INTERNAL_DMA_ENABLED
     69          #if defined ( __ICCARM__ )      /* !< IAR Compiler */
     70          #pragma data_alignment=4
     71          #endif
     72          #endif                          /* USB_OTG_HS_INTERNAL_DMA_ENABLED */
     73          
     74          __ALIGN_BEGIN USB_OTG_CORE_HANDLE USB_OTG_dev __ALIGN_END;
     75          
     76          /**
     77            * @}
     78            */
     79          
     80          
     81          /** @defgroup APP_VCP_Private_FunctionPrototypes
     82            * @{
     83            */
     84          /**
     85            * @}
     86            */
     87          
     88          
     89          /** @defgroup APP_VCP_Private_Functions
     90            * @{
     91            */
     92          
     93          /**
     94            * @brief  Program entry point
     95            * @param  None
     96            * @retval None
     97            */
     98          int main(void)
     99          {
    100            __IO uint32_t i = 0;
    101          
    102            /* !< At this stage the microcontroller clock setting is already configured,
    103             * this is done through SystemInit() function which is called from startup
    104             * file (startup_stm32fxxx_xx.s) before to branch to application main. To
    105             * reconfigure the default setting of SystemInit() function, refer to
    106             * system_stm32fxxx.c file */
    107          
    108            USBD_Init(&USB_OTG_dev,
    109          #ifdef USE_USB_OTG_HS
    110                      USB_OTG_HS_CORE_ID,
    111          #else
    112                      USB_OTG_FS_CORE_ID,
    113          #endif
    114                      &USR_desc, &USBD_CDC_cb, &USR_cb);
    115          
    116            /* Main loop */
    117            while (1)
    118            {
    119              if (i++ == 0x100000)
    120              {
    121                STM_EVAL_LEDToggle(LED1);
    122                STM_EVAL_LEDToggle(LED2);
    123                STM_EVAL_LEDToggle(LED3);
    124                STM_EVAL_LEDToggle(LED4);
    125                i = 0;
    126              }
    127            }
    128          }
    129          
    130          #ifdef USE_FULL_ASSERT
    131          /**
    132          * @brief  assert_failed
    133          *         Reports the name of the source file and the source line number
    134          *         where the assert_param error has occurred.
    135          * @param  File: pointer to the source file name
    136          * @param  Line: assert_param error line source number
    137          * @retval None
    138          */
    139          void assert_failed(uint8_t * file, uint32_t line)
    140          {
    141            /* User can add his own implementation to report the file name and line
    142             * number, ex: printf("Wrong parameters value: file %s on line %d\r\n", file, 
    143             * * line) */
    144          
    145            /* Infinite loop */
    146            while (1)
    147            {
    148            }
    149          }
    150          #endif
    151          
    152          /**
    153            * @}
    154            */
    155          
    156          
    157          /**
    158            * @}
    159            */
    160          
    161          
    162          /**
    163            * @}
    164            */
    165          
    166          /************************ (C) COPYRIGHT STMicroelectronics *****END OF FILE****/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      16   main
        16   -> STM_EVAL_LEDToggle
        16   -> USBD_Init


   Section sizes:

   Bytes  Function/Label
   -----  --------------
    1524  USB_OTG_dev
      84  main

 
 1 524 bytes in section .bss
    84 bytes in section .text
 
    84 bytes of CODE memory
 1 524 bytes of DATA memory

Errors: none
Warnings: none
