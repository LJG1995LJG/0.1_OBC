###############################################################################
#
# IAR ANSI C/C++ Compiler V7.80.4.12462/W32 for ARM       19/Nov/2018  00:45:12
# Copyright 1999-2017 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        E:\DYH\01_EmbeddedSoftware\Github\0.1_OBC\Reference\en.stm32_f105-07_f2_f4_usb-host-device_lib\Project\USB_Device_Examples\VCP\src\usb_bsp.c
#    Command line =  
#        E:\DYH\01_EmbeddedSoftware\Github\0.1_OBC\Reference\en.stm32_f105-07_f2_f4_usb-host-device_lib\Project\USB_Device_Examples\VCP\src\usb_bsp.c
#        -D USE_STDPERIPH_DRIVER -D STM32F10X_CL -D USE_STM3210C_EVAL -D
#        USE_USB_OTG_FS -lcN
#        E:\DYH\01_EmbeddedSoftware\Github\0.1_OBC\Reference\en.stm32_f105-07_f2_f4_usb-host-device_lib\Project\USB_Device_Examples\VCP\EWARM\STM3210C-EVAL_USBD-FS\List
#        -o
#        E:\DYH\01_EmbeddedSoftware\Github\0.1_OBC\Reference\en.stm32_f105-07_f2_f4_usb-host-device_lib\Project\USB_Device_Examples\VCP\EWARM\STM3210C-EVAL_USBD-FS\Obj
#        --debug --endian=little --cpu=Cortex-M3 -e --fpu=None --dlib_config
#        "E:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.5\arm\INC\c\DLib_Config_Full.h" -I
#        E:\DYH\01_EmbeddedSoftware\Github\0.1_OBC\Reference\en.stm32_f105-07_f2_f4_usb-host-device_lib\Project\USB_Device_Examples\VCP\EWARM\..\inc\
#        -I
#        E:\DYH\01_EmbeddedSoftware\Github\0.1_OBC\Reference\en.stm32_f105-07_f2_f4_usb-host-device_lib\Project\USB_Device_Examples\VCP\EWARM\..\..\..\..\Libraries\CMSIS\Device\ST\STM32F10x\Include\
#        -I
#        E:\DYH\01_EmbeddedSoftware\Github\0.1_OBC\Reference\en.stm32_f105-07_f2_f4_usb-host-device_lib\Project\USB_Device_Examples\VCP\EWARM\..\..\..\..\Libraries\STM32F10x_StdPeriph_Driver\inc\
#        -I
#        E:\DYH\01_EmbeddedSoftware\Github\0.1_OBC\Reference\en.stm32_f105-07_f2_f4_usb-host-device_lib\Project\USB_Device_Examples\VCP\EWARM\..\..\..\..\Libraries\STM32_USB_OTG_Driver\inc\
#        -I
#        E:\DYH\01_EmbeddedSoftware\Github\0.1_OBC\Reference\en.stm32_f105-07_f2_f4_usb-host-device_lib\Project\USB_Device_Examples\VCP\EWARM\..\..\..\..\Libraries\STM32_USB_Device_Library\Core\inc\
#        -I
#        E:\DYH\01_EmbeddedSoftware\Github\0.1_OBC\Reference\en.stm32_f105-07_f2_f4_usb-host-device_lib\Project\USB_Device_Examples\VCP\EWARM\..\..\..\..\Libraries\STM32_USB_Device_Library\Class\cdc\inc\
#        -I
#        E:\DYH\01_EmbeddedSoftware\Github\0.1_OBC\Reference\en.stm32_f105-07_f2_f4_usb-host-device_lib\Project\USB_Device_Examples\VCP\EWARM\..\..\..\..\Utilities\STM32_EVAL\
#        -I
#        E:\DYH\01_EmbeddedSoftware\Github\0.1_OBC\Reference\en.stm32_f105-07_f2_f4_usb-host-device_lib\Project\USB_Device_Examples\VCP\EWARM\..\..\..\..\Utilities\STM32_EVAL\Common\
#        -I
#        E:\DYH\01_EmbeddedSoftware\Github\0.1_OBC\Reference\en.stm32_f105-07_f2_f4_usb-host-device_lib\Project\USB_Device_Examples\VCP\EWARM\..\..\..\..\Utilities\STM32_EVAL\STM3210C_EVAL\
#        -Ohz --use_c++_inline -I "E:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.5\arm\CMSIS\Include\"
#    Locale       =  Chinese (Simplified)_China.936
#    List file    =  
#        E:\DYH\01_EmbeddedSoftware\Github\0.1_OBC\Reference\en.stm32_f105-07_f2_f4_usb-host-device_lib\Project\USB_Device_Examples\VCP\EWARM\STM3210C-EVAL_USBD-FS\List\usb_bsp.lst
#    Object file  =  
#        E:\DYH\01_EmbeddedSoftware\Github\0.1_OBC\Reference\en.stm32_f105-07_f2_f4_usb-host-device_lib\Project\USB_Device_Examples\VCP\EWARM\STM3210C-EVAL_USBD-FS\Obj\usb_bsp.o
#
###############################################################################

E:\DYH\01_EmbeddedSoftware\Github\0.1_OBC\Reference\en.stm32_f105-07_f2_f4_usb-host-device_lib\Project\USB_Device_Examples\VCP\src\usb_bsp.c
      1          /**
      2            ******************************************************************************
      3            * @file    usb_bsp.c
      4            * @author  MCD Application Team
      5            * @version V1.2.1
      6            * @date    17-March-2018
      7            * @brief   This file is responsible to offer board support package and is 
      8            *          configurable by user.
      9            ******************************************************************************
     10            * @attention
     11            *
     12            * <h2><center>&copy; Copyright (c) 2015 STMicroelectronics.
     13            * All rights reserved.</center></h2>
     14            *
     15            * This software component is licensed by ST under Ultimate Liberty license
     16            * SLA0044, the "License"; You may not use this file except in compliance with
     17            * the License. You may obtain a copy of the License at:
     18            *                      <http://www.st.com/SLA0044>
     19            *
     20            ******************************************************************************
     21            */
     22          
     23          /* Includes ------------------------------------------------------------------ */
     24          #include "usb_bsp.h"
     25          
     26          /** @addtogroup STM32_USB_OTG_DEVICE_LIBRARY
     27          * @{
     28          */
     29          
     30          /** @defgroup USB_BSP
     31          * @brief This file is responsible to offer board support package
     32          * @{
     33          */
     34          
     35          /** @defgroup USB_BSP_Private_Defines
     36          * @{
     37          */
     38          /**
     39          * @}
     40          */
     41          
     42          
     43          /** @defgroup USB_BSP_Private_TypesDefinitions
     44          * @{
     45          */
     46          /**
     47          * @}
     48          */
     49          
     50          
     51          
     52          
     53          
     54          /** @defgroup USB_BSP_Private_Macros
     55          * @{
     56          */
     57          /**
     58          * @}
     59          */
     60          
     61          /** @defgroup USBH_BSP_Private_Variables
     62          * @{
     63          */
     64          
     65          /**
     66          * @}
     67          */
     68          
     69          /** @defgroup USBH_BSP_Private_FunctionPrototypes
     70          * @{
     71          */
     72          /**
     73          * @}
     74          */
     75          
     76          /** @defgroup USB_BSP_Private_Functions
     77          * @{
     78          */
     79          
     80          
     81          /**
     82          * @brief  USB_OTG_BSP_Init
     83          *         Initializes BSP configurations
     84          * @param  None
     85          * @retval None
     86          */
     87          
     88          void USB_OTG_BSP_Init(USB_OTG_CORE_HANDLE * pdev)
     89          {
     90          #ifdef USE_STM3210C_EVAL
     91          
     92            RCC_OTGFSCLKConfig(RCC_OTGFSCLKSource_PLLVCO_Div3);
     93            RCC_AHBPeriphClockCmd(RCC_AHBPeriph_OTG_FS, ENABLE);
     94          
     95          #else                           /* USE_STM322xG_EVAL */
     96            GPIO_InitTypeDef GPIO_InitStructure;
     97          #ifdef USE_USB_OTG_FS
     98            RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOA, ENABLE);
     99          
    100            /* Configure SOF ID DM DP Pins */
    101            GPIO_InitStructure.GPIO_Pin = GPIO_Pin_8 | GPIO_Pin_11 | GPIO_Pin_12;
    102          
    103            GPIO_InitStructure.GPIO_Speed = GPIO_Speed_100MHz;
    104            GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF;
    105            GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
    106            GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;
    107            GPIO_Init(GPIOA, &GPIO_InitStructure);
    108          
    109            GPIO_PinAFConfig(GPIOA, GPIO_PinSource8, GPIO_AF_OTG1_FS);
    110            GPIO_PinAFConfig(GPIOA, GPIO_PinSource11, GPIO_AF_OTG1_FS);
    111            GPIO_PinAFConfig(GPIOA, GPIO_PinSource12, GPIO_AF_OTG1_FS);
    112          
    113            /* Configure VBUS Pin */
    114            GPIO_InitStructure.GPIO_Pin = GPIO_Pin_9;
    115            GPIO_InitStructure.GPIO_Speed = GPIO_Speed_100MHz;
    116            GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN;
    117            GPIO_InitStructure.GPIO_OType = GPIO_OType_OD;
    118            GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;
    119            GPIO_Init(GPIOA, &GPIO_InitStructure);
    120          
    121            /* Configure ID pin */
    122            GPIO_InitStructure.GPIO_Pin = GPIO_Pin_10;
    123            GPIO_InitStructure.GPIO_OType = GPIO_OType_OD;
    124            GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_UP;
    125            GPIO_InitStructure.GPIO_Speed = GPIO_Speed_100MHz;
    126            GPIO_Init(GPIOA, &GPIO_InitStructure);
    127            GPIO_PinAFConfig(GPIOA, GPIO_PinSource10, GPIO_AF_OTG1_FS);
    128          
    129            RCC_APB2PeriphClockCmd(RCC_APB2Periph_SYSCFG, ENABLE);
    130            RCC_AHB2PeriphClockCmd(RCC_AHB2Periph_OTG_FS, ENABLE);
    131          #else                           /* USE_USB_OTG_HS */
    132          
    133          #ifdef USE_ULPI_PHY             /* ULPI */
    134            RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOA | RCC_AHB1Periph_GPIOB |
    135                                   RCC_AHB1Periph_GPIOC | RCC_AHB1Periph_GPIOH |
    136                                   RCC_AHB1Periph_GPIOI, ENABLE);
    137          
    138          
    139            GPIO_PinAFConfig(GPIOA, GPIO_PinSource3, GPIO_AF_OTG2_HS);  /* D0 */
    140            GPIO_PinAFConfig(GPIOA, GPIO_PinSource5, GPIO_AF_OTG2_HS);  /* CLK */
    141            GPIO_PinAFConfig(GPIOB, GPIO_PinSource0, GPIO_AF_OTG2_HS);  /* D1 */
    142            GPIO_PinAFConfig(GPIOB, GPIO_PinSource1, GPIO_AF_OTG2_HS);  /* D2 */
    143            GPIO_PinAFConfig(GPIOB, GPIO_PinSource5, GPIO_AF_OTG2_HS);  /* D7 */
    144            GPIO_PinAFConfig(GPIOB, GPIO_PinSource10, GPIO_AF_OTG2_HS); /* D3 */
    145            GPIO_PinAFConfig(GPIOB, GPIO_PinSource11, GPIO_AF_OTG2_HS); /* D4 */
    146            GPIO_PinAFConfig(GPIOB, GPIO_PinSource12, GPIO_AF_OTG2_HS); /* D5 */
    147            GPIO_PinAFConfig(GPIOB, GPIO_PinSource13, GPIO_AF_OTG2_HS); /* D6 */
    148            GPIO_PinAFConfig(GPIOH, GPIO_PinSource4, GPIO_AF_OTG2_HS);  /* NXT */
    149            GPIO_PinAFConfig(GPIOI, GPIO_PinSource11, GPIO_AF_OTG2_HS); /* DIR */
    150            GPIO_PinAFConfig(GPIOC, GPIO_PinSource0, GPIO_AF_OTG2_HS);  /* STP */
    151          
    152            /* CLK */
    153            GPIO_InitStructure.GPIO_Pin = GPIO_Pin_5;
    154            GPIO_InitStructure.GPIO_Speed = GPIO_Speed_100MHz;
    155            GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF;
    156            GPIO_Init(GPIOA, &GPIO_InitStructure);
    157          
    158            /* D0 */
    159            GPIO_InitStructure.GPIO_Pin = GPIO_Pin_3;
    160            GPIO_InitStructure.GPIO_Speed = GPIO_Speed_100MHz;
    161            GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF;
    162            GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
    163            GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;
    164            GPIO_Init(GPIOA, &GPIO_InitStructure);
    165          
    166          
    167          
    168            /* D1 D2 D3 D4 D5 D6 D7 */
    169            GPIO_InitStructure.GPIO_Pin = GPIO_Pin_0 | GPIO_Pin_1 |
    170              GPIO_Pin_5 | GPIO_Pin_10 | GPIO_Pin_11 | GPIO_Pin_12 | GPIO_Pin_13;
    171          
    172            GPIO_InitStructure.GPIO_Speed = GPIO_Speed_100MHz;
    173            GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF;
    174            GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
    175            GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;
    176            GPIO_Init(GPIOB, &GPIO_InitStructure);
    177          
    178          
    179            /* STP */
    180            GPIO_InitStructure.GPIO_Pin = GPIO_Pin_0;
    181            GPIO_InitStructure.GPIO_Speed = GPIO_Speed_100MHz;
    182            GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF;
    183            GPIO_Init(GPIOC, &GPIO_InitStructure);
    184          
    185            /* NXT */
    186            GPIO_InitStructure.GPIO_Pin = GPIO_Pin_4;
    187            GPIO_InitStructure.GPIO_Speed = GPIO_Speed_100MHz;
    188            GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF;
    189            GPIO_Init(GPIOH, &GPIO_InitStructure);
    190          
    191          
    192            /* DIR */
    193            GPIO_InitStructure.GPIO_Pin = GPIO_Pin_11;
    194            GPIO_InitStructure.GPIO_Speed = GPIO_Speed_100MHz;
    195            GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF;
    196            GPIO_Init(GPIOI, &GPIO_InitStructure);
    197          
    198          
    199            RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_OTG_HS |
    200                                   RCC_AHB1Periph_OTG_HS_ULPI, ENABLE);
    201          
    202          #else
    203          
    204            RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOB, ENABLE);
    205          
    206            GPIO_InitStructure.GPIO_Pin = GPIO_Pin_12 | GPIO_Pin_14 | GPIO_Pin_15;
    207          
    208            GPIO_InitStructure.GPIO_Speed = GPIO_Speed_100MHz;
    209            GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF;
    210            GPIO_Init(GPIOB, &GPIO_InitStructure);
    211          
    212            GPIO_PinAFConfig(GPIOB, GPIO_PinSource12, GPIO_AF_OTG2_FS);
    213            GPIO_PinAFConfig(GPIOB, GPIO_PinSource14, GPIO_AF_OTG2_FS);
    214            GPIO_PinAFConfig(GPIOB, GPIO_PinSource15, GPIO_AF_OTG2_FS);
    215          
    216            GPIO_InitStructure.GPIO_Pin = GPIO_Pin_13;
    217            GPIO_InitStructure.GPIO_Speed = GPIO_Speed_100MHz;
    218            GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN;
    219            GPIO_Init(GPIOB, &GPIO_InitStructure);
    220          
    221            /* USB OTG HS ULPI clock Disabled */
    222            RCC_AHB1PeriphClockLPModeCmd(RCC_AHB1Periph_OTG_HS_ULPI, DISABLE);
    223          
    224            RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_OTG_HS, ENABLE);
    225          
    226          #endif
    227          #endif                          /* USB_OTG_HS */
    228          #endif                          /* USE_STM3210C_EVAL */
    229          }
    230          
    231          /**
    232          * @brief  USB_OTG_BSP_EnableInterrupt
    233          *         Enable USB Global interrupt
    234          * @param  None
    235          * @retval None
    236          */
    237          void USB_OTG_BSP_EnableInterrupt(USB_OTG_CORE_HANDLE * pdev)
    238          {
    239            NVIC_InitTypeDef NVIC_InitStructure;
    240          
    241            NVIC_PriorityGroupConfig(NVIC_PriorityGroup_1);
    242          #ifdef USE_USB_OTG_HS
    243            NVIC_InitStructure.NVIC_IRQChannel = OTG_HS_IRQn;
    244          #else
    245            NVIC_InitStructure.NVIC_IRQChannel = OTG_FS_IRQn;
    246          #endif
    247            NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 1;
    248            NVIC_InitStructure.NVIC_IRQChannelSubPriority = 3;
    249            NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
    250            NVIC_Init(&NVIC_InitStructure);
    251          #ifdef USB_OTG_HS_DEDICATED_EP1_ENABLED
    252            NVIC_PriorityGroupConfig(NVIC_PriorityGroup_1);
    253            NVIC_InitStructure.NVIC_IRQChannel = OTG_HS_EP1_OUT_IRQn;
    254            NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 1;
    255            NVIC_InitStructure.NVIC_IRQChannelSubPriority = 2;
    256            NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
    257            NVIC_Init(&NVIC_InitStructure);
    258          
    259            NVIC_PriorityGroupConfig(NVIC_PriorityGroup_1);
    260            NVIC_InitStructure.NVIC_IRQChannel = OTG_HS_EP1_IN_IRQn;
    261            NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 1;
    262            NVIC_InitStructure.NVIC_IRQChannelSubPriority = 1;
    263            NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
    264            NVIC_Init(&NVIC_InitStructure);
    265          #endif
    266          }
    267          
    268          /**
    269          * @brief  USB_OTG_BSP_uDelay
    270          *         This function provides delay time in micro sec
    271          * @param  usec : Value of delay required in micro sec
    272          * @retval None
    273          */
    274          #if defined (USE_STM322xG_EVAL)
    275               /* This value is set for SYSCLK = 120 MHZ, User can adjust this value
    276                * depending on used SYSCLK frequency */
    277          #define count_us   40
    278          
    279          #elif defined(USE_STM324xG_EVAL) || defined(USE_STM324x9I_EVAL)
    280              /* This value is set for SYSCLK = 168 MHZ, User can adjust this value
    281               * depending on used SYSCLK frequency */
    282          #define count_us   55
    283          
    284          #else                           /* defined (USE_STM3210C_EVAL) */
    285              /* This value is set for SYSCLK = 72 MHZ, User can adjust this value
    286               * depending on used SYSCLK frequency */
    287          #define count_us   12
    288          #endif
    289          void USB_OTG_BSP_uDelay(const uint32_t usec)
    290          {
    291            uint32_t count = count_us * usec;
    292            do
    293            {
    294              if (--count == 0)
    295              {
    296                return;
    297              }
    298            }
    299            while (1);
    300          }
    301          
    302          
    303          /**
    304          * @brief  USB_OTG_BSP_mDelay
    305          *          This function provides delay time in milli sec
    306          * @param  msec : Value of delay required in milli sec
    307          * @retval None
    308          */
    309          void USB_OTG_BSP_mDelay(const uint32_t msec)
    310          {
    311            USB_OTG_BSP_uDelay(msec * 1000);
    312          }
    313          
    314          /**
    315          * @}
    316          */
    317          
    318          /**
    319          * @}
    320          */
    321          
    322          /**
    323          * @}
    324          */
    325          
    326          /************************ (C) COPYRIGHT STMicroelectronics *****END OF FILE****/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   USB_OTG_BSP_EnableInterrupt
         8   -> NVIC_Init
         8   -> NVIC_PriorityGroupConfig
       8   USB_OTG_BSP_Init
         0   -> RCC_AHBPeriphClockCmd
         8   -> RCC_OTGFSCLKConfig
       0   USB_OTG_BSP_mDelay
         0   -> USB_OTG_BSP_uDelay
       0   USB_OTG_BSP_uDelay


   Section sizes:

   Bytes  Function/Label
   -----  --------------
      42  USB_OTG_BSP_EnableInterrupt
      22  USB_OTG_BSP_Init
       8  USB_OTG_BSP_mDelay
      10  USB_OTG_BSP_uDelay

 
 82 bytes in section .text
 
 82 bytes of CODE memory

Errors: none
Warnings: none
